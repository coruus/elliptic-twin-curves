# NOTE

These results, though they are a relatively large sample of curves
reduced over P-384, are incomplete: They are the first 120 of a set
of 1000.

Please don't try to interpret the data too much.

--

Letting

    stopping_times = [
      0x19371,  0x34d4a,  0x61bd,  0x84af,
      0xa7eb,   0x51e9c, 0x43646,   0xc61,
      0x16f79,    0x415, 0x192ce, 0x14750,
      0xc96, 0x12b42, 0x1b180, 0x30d38, 0x57dc, 0x21b7c, 0x2895, 0x75b4, 0x1fa9b, 0xc9ee, 0xba8e, 0x14788, 0x152aa, 0x162d7, 0x841d, 0x1235a, 0xb590, 0x11f02, 0x5b41, 0x1d01a, 0x6d8, 0x4469e, 0x97c6, 0x63ce, 0x22741, 0x1006c, 0x2f6d2, 0x34cc8, 0xb27, 0x147e1, 0x14b66, 0x3333c, 0x10863, 0x1813, 0x11d10, 0x16971, 0x1287d, 0x9716, 0xe90b, 0x50a2, 0x4424, 0x26ca, 0x147f1, 0x1b131, 0x8a7d, 0x101f8, 0x3310, 0xcef7, 0x6182, 0x628b, 0xed20, 0x212a3, 0x201e7, 0xa997, 0x3a10f, 0x1edfa, 0x34c9e, 0x77bc, 0x1fe8, 0x1dd91, 0x20fe8, 0x1a2ce, 0x15a5, 0x1dc5, 0x1abda, 0xc9d7, 0x1888e, 0x2160, 0x3bf7, 0xa94c, 0xceef, 0xdd30, 0xdb3f, 0x9097, 0x128fa, 0x12a88, 0x8010, 0x21b, 0x134, 0x2ebf, 0x3a43]
    
    float(len(stopping_times)) / sum(stopping_times)
    > 1.3091466841144481e-05

which is a (bad) estimator for the probability of a randomly selected
curve being an elliptic twin. (It is *not* the probability, given
that a curve has prime order, of that curve being an elliptic twin.)

--

This data is more useful for estimating the number of curves that need
to be examined in order to find an elliptic twin, as a rough metric for
the amount of computation needed to achieve a target sample size.

    np.ptp(v)
    > 335208
    np.std(v)
    > 69565.17
    np.median(v)
    > 59659
    np.mean(v)
    > 76385.34
